input {
  beats {
    port => 5044
    type => "metrics"
  }
}

input {
  udp {
    port => 9514
    codec => "json"
    type => "rsyslog"
  }
}
input {
  udp {
    port => 9599
    codec => "json"
    type => "container"
  }
}
input {
  udp {
    port => 9699         # 25826 matches port specified in collectd.conf
    buffer_size => 1452   # 1452 is the default buffer size for Collectd
    codec => collectd { } # specific Collectd codec to invoke
    type => "collectd"
  }
}

filter {
    if [type] == "container" {
   # "message" => "2017-03-15 02:02:09,774 [root] INFO: notified CMD ALL COMPLETED: clean from AGuLRXE= [25/25] started[1489543329.68] now[1489543329.77] elapsed[0.0976600646973]"
        if [message] {
          if [message] =~ /CMD: / {
              ruby {
                    code => "event.set('ef_command', event.get('message').sub(/^.*?CMD: (\w+).*$/, '\1'))"
              }
          }
          # INFO: [1489437217.74]started [1489437228.04]finished rmi completed in 10.2967410088.
          if [message] =~ /INFO: \[[0-9\.]+\].*?started/ {
              ruby {
                    code => "event.set('ef_sub_command', event.get('message').sub(/^.*?finished (\w+) completed in ([0-9]+\.[0-9]+).*$/, '\1'))"
              }
              ruby {
                    code => "event.set('ef_sc_elapsed_time', event.get('message').sub(/^.*?finished (\w+) completed in ([0-9]+\.[0-9]+).*$/, '\2'))"
              }
          }
          # INFO: [1489437228.02]finished clean completed in 10.2983670235.
          if [message] =~ /INFO: \[[0-9\.]+\]finished / {
              ruby {
                    code => "event.set('ef_finished_command', event.get('message').sub(/^.*?finished (\w+) completed in ([0-9]+\.[0-9]+).*$/, '\1'))"
              }
              ruby {
                    code => "event.set('ef_elapsed_time', event.get('message').sub(/^.*?finished (\w+) completed in ([0-9]+\.[0-9]+).*$/, '\2'))"
              }
          }
          # INFO: notified CMD ALL COMPLETED: launch from kï¿½Eg [3/3] started[1489438099.43] now[1489438101.48] elapsed[2.04832386971]
          if [message] =~ /INFO: notified CMD ALL COMPLETED:/ {
              ruby {
                    code => "event.set('ef_finished_command', event.get('message').sub(/^.*?COMPLETED: (\w+) .*? elapsed\[([0-9]+\.[0-9]+).*$/, '\1'))"
              }
              ruby {
                    code => "event.set('ef_elapsed_time', event.get('message').sub(/^.*?COMPLETED: (\w+) .*? elapsed\[([0-9]+\.[0-9]+).*$/, '\2'))"
              }
          }
        }
    }
}

filter {
  if [type] == "collectd" {
      mutate {
        convert => { "value" => "integer" }
      }
  }
}

output {
  # stdout { codec => rubydebug }
  if "_grokparsefailure" in [tags] or "_jsonparsefailure" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "changeme"
      index => "parse-err-%{+YYYY.MM.dd}"
    }
  }
  if [type] == "rsyslog" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "changeme"
      index => "rsyslog-%{+YYYY.MM.dd}"
    }
  }
  if [type] == "container" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "changeme"
      index => "container-%{+YYYY.MM.dd}"
    }
  }
  if [type] == "collectd" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "changeme"
      index => "collectd-%{+YYYY.MM.dd}"
    }
  }
  if [type] == "metricsets" {
      # stdout { codec => rubydebug }

    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "changeme"
      index => "metrics-%{+YYYY.MM.dd}"
    }
  }
}
