input {
  beats {
    port => 5044
    type => "metrics"
  }
}

input {
  udp {
    port => 9514
    codec => "json"
    type => "rsyslog"
  }
  tcp {
    port => 9514
    codec => "json"
    type => "rsyslog"
  }
}
input {
  udp {
    port => 9599
    codec => "json"
    type => "container"
  }
}

filter {
   if [type] == "rsyslog" {
         # check if message looks like json and try to decode it
     if [message] =~ /^\{.*\}$/ {
       json {
         source => "message"
         target => "message_json"
         remove_field => [ "message" ]
       }
     }

     mutate {
       rename => { "message_json" => "message" }
     }
   }
}

filter {
  if [type] == "collectd" {
      mutate {
        convert => { "value" => "integer" }
      }
  }
}

output {
  # stdout { codec => rubydebug }
  if "_grokparsefailure" in [tags] or "_jsonparsefailure" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "logstash_internal"
      password => "changeme"
      index => "parse-err-%{+YYYY.MM.dd}"
    }
  }
  else {
      if [type] == "rsyslog" {
        elasticsearch {
          hosts => ["elasticsearch:9200"]
          user => "logstash_internal"
          password => "changeme"
          index => "rsyslog-%{+YYYY.MM.dd}"
        }
      }
      else if [type] == "container" {
        elasticsearch {
          hosts => ["elasticsearch:9200"]
          user => "logstash_internal"
          password => "changeme"
          index => "container-%{+YYYY.MM.dd}"
        }
      }
      else if [type] == "metricsets" {
          # stdout { codec => rubydebug }

        elasticsearch {
          hosts => ["elasticsearch:9200"]
          user => "logstash_internal"
          password => "changeme"
          index => "metrics-%{+YYYY.MM.dd}"
        }
      }
      else {
        elasticsearch {
          hosts => ["elasticsearch:9200"]
          user => "logstash_internal"
          password => "changeme"
          index => "everything-else-%{+YYYY.MM.dd}"
        }
      }
  }
}
